scale_fill_gradientn(colors = colorRamps::matlab.like(20), main= "Depth")
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
# geom_sf(data = World, fill = "transparent") + # This one makes coastline transparent
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_gradientn(colors = colorRamps::matlab.like(20), guides = guide(name = "B"))
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
# geom_sf(data = World, fill = "transparent") + # This one makes coastline transparent
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_gradientn(colors = colorRamps::matlab.like(20), name = "B")
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
# geom_sf(data = World, fill = "transparent") + # This one makes coastline transparent
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_gradientn(colors = colorRamps::matlab.like(20), name = "Bathymetry")
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
# geom_sf(data = World) +
geom_sf(data = World, fill = "transparent") + # This one makes coastline transparent
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_gradientn(colors = colorRamps::matlab.like(20), name = "Bathymetry (m)")
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_gradientn(colors = colorRamps::matlab.like(20), name = "Bathymetry (m)")
lon <- c(-120, -40)
lat <- c(20, 50)
basemap <- get.bathy(lon = lon, lat = lat, visualize = F, terrain = T)
basemap <- get.bathy(lon = lon, lat = lat, visualize = F, terrain = T, res = 30)
basemap_df <- data.frame(coordinates(basemap)) %>%
mutate(bathy = values(basemap))
World <- rnaturalearth::ne_states(country = c("united states of america", "canada"), returnclass = "sf")
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_gradientn(colors = colorRamps::matlab.like(20), name = "Bathymetry (m)")
basemap <- get.bathy(lon = lon, lat = lat, visualize = F, terrain = T, res = 10)
basemap_df <- data.frame(coordinates(basemap)) %>%
mutate(bathy = values(basemap))
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_gradientn(colors = colorRamps::matlab.like(20), name = "Bathymetry (m)")
World <- rnaturalearth::ne_states(country = c("united states of america", "canada", "mexico"), returnclass = "sf")
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_gradientn(colors = colorRamps::matlab.like(20), name = "Bathymetry (m)")
lon <- c(-130, -40)
lat <- c(20, 50)
basemap <- get.bathy(lon = lon, lat = lat, visualize = F, terrain = T, res = 10)
basemap_df <- data.frame(coordinates(basemap)) %>%
mutate(bathy = values(basemap))
World <- rnaturalearth::ne_states(country = c("united states of america", "canada", "mexico"), returnclass = "sf")
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_gradientn(colors = colorRamps::matlab.like(20), name = "Bathymetry (m)")
World <- rnaturalearth::ne_states(country = c("united states of america", "canada", "mexico"), returnclass = "sf") %>%
st_union()
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_gradientn(colors = colorRamps::matlab.like(20), name = "Bathymetry (m)")
World <- rnaturalearth::ne_states(country = c("united states of america", "canada", "mexico"), returnclass = "sf") %>%
st_combine()
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_gradientn(colors = colorRamps::matlab.like(20), name = "Bathymetry (m)")
colnames(World)
World
class(World)
World <- rnaturalearth::ne_states(country = c("united states of america", "canada", "mexico"), returnclass = "sf") %>%
st_union()
class(World)
plot(Wolrd[1])
plot(World[1])
World <- rnaturalearth::ne_states(country = c("united states of america", "canada", "mexico"), returnclass = "sf") %>%
st_union() %>%
st_as_sf()
World <- rnaturalearth::ne_states(country = c("united states of america", "canada", "mexico"), returnclass = "sf") %>%
st_union() %>%
st_cast("POLYGON")
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_gradientn(colors = colorRamps::matlab.like(20), name = "Bathymetry (m)")
class(World)
World <- rnaturalearth::ne_states(country = c("united states of america", "canada", "mexico"), returnclass = "sf") %>%
st_union() %>%
st_cast("POLYGON") %>%
mutate(a = 1)
World <- rnaturalearth::ne_states(country = c("united states of america", "canada", "mexico"), returnclass = "sf") %>%
st_union() %>%
st_sf()
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_gradientn(colors = colorRamps::matlab.like(20), name = "Bathymetry (m)")
lon <- c(-140, -40)
lat <- c(20, 60)
basemap <- get.bathy(lon = lon, lat = lat, visualize = F, terrain = T, res = 15)
basemap_df <- data.frame(coordinates(basemap)) %>%
mutate(bathy = values(basemap))
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_gradientn(colors = colorRamps::matlab.like(20), name = "Bathymetry (m)")
basemap <- get.bathy(lon = lon, lat = lat, visualize = F, res = 15)
basemap_df <- data.frame(coordinates(basemap)) %>%
mutate(bathy = values(basemap))
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_gradientn(colors = colorRamps::matlab.like(20), name = "Bathymetry (m)")
basemap_df <- data.frame(coordinates(basemap)) %>%
mutate(bathy = -values(basemap))
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_gradientn(colors = colorRamps::matlab.like(20), name = "Bathymetry (m)")
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
# scale_fill_gradientn(colors = colorRamps::matlab.like(20), name = "Bathymetry (m)") +
scale_fill_viridis_c()
get_all_vars()
library(oceanmap)
library(sf)
library(tidyverse)
World <- rnaturalearth::ne_states(country = c("united states of america", "canada", "mexico"), returnclass = "sf") %>%
st_union() %>% #just to combine all polygons into a large one
st_sf()
lon <- c(-140, -40)
lat <- c(20, 60)
basemap <- get.bathy(lon = lon, lat = lat, visualize = F, res = 15)
basemap_df <- data.frame(coordinates(basemap)) %>%
mutate(bathy = -values(basemap))
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_viridis_c()
lat <- c(10, 60)
# Define bbox of basemap I need
lon <- c(-140, -40)
lat <- c(10, 60)
# Get bathymetry to use as basemap
basemap <- get.bathy(lon = lon, lat = lat, visualize = F, res = 15)
# Transform raster into a tidy data.frame
basemap_df <- data.frame(coordinates(basemap)) %>%
mutate(bathy = -values(basemap))
# Make the map
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_viridis_c() +
labs(x = "Longitude", y = "Latitude")
# Make the map
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
# geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_viridis_c() +
labs(x = "Longitude", y = "Latitude")
# Make the map
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_viridis_c() +
labs(x = "Longitude", y = "Latitude")
# Load coastline polygon and unite
World <- ne_states(country = c("united states of america",
"canada",
"mexico",
"guatemala",
"belize"), returnclass = "sf") %>%
st_union() %>% #just to combine all polygons into a large one
st_sf()
library(rnaturalearth)
# Load coastline polygon and unite
World <- ne_states(country = c("united states of america",
"canada",
"mexico",
"guatemala",
"belize"), returnclass = "sf") %>%
st_union() %>% #just to combine all polygons into a large one
st_sf()
# Make the map
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_viridis_c() +
labs(x = "Longitude", y = "Latitude")
plot(World)
# Load coastline polygon and unite
World <- ne_states(country = c("united states of america",
"canada",
"mexico",
"guatemala",
"belize"), returnclass = "sf") %>%
st_union() %>% #just to combine all polygons into a large one
st_sf()
# Make the map
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_viridis_c() +
labs(x = "Longitude", y = "Latitude")
# Load coastline polygon and unite
World <- ne_states(country = c("united states of america",
"canada",
"mexico",
"guatemala",
"belize",
"honduras",
"colombia"), returnclass = "sf") %>%
st_union() %>% #just to combine all polygons into a large one
st_sf()
# Make the map
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_viridis_c() +
labs(x = "Longitude", y = "Latitude")
# Load coastline polygon and unite
World <- ne_states(country = c("united states of america",
"canada",
"mexico",
"guatemala",
"belize",
"honduras"), returnclass = "sf") %>%
st_union() %>% #just to combine all polygons into a large one
st_sf()
# Define bbox of basemap I need
lon <- c(-140, -40)
lat <- c(15, 60)
# Get bathymetry to use as basemap
basemap <- get.bathy(lon = lon, lat = lat, visualize = F, res = 15)
# Transform raster into a tidy data.frame
basemap_df <- data.frame(coordinates(basemap)) %>%
mutate(bathy = -values(basemap))
# Make the map
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_viridis_c() +
labs(x = "Longitude", y = "Latitude")
# Make the map
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_viridis_c(name = "Bathymetry (m)") +
labs(x = "Longitude", y = "Latitude")
?ne_states
a <- ne_states(geounit = "america")
a <- ne_states(geounit = "north america")
a <- ne_states(geounit = "mexico")
plot(a)
spdf_france_country <- ne_states(country = 'france')
spdf_france_geounit <- ne_states(geounit = 'france')
plot(spdf_france_country)
plot(spdf_france_geounit)
a <- ne_countries(continent = "america")
a <- ne_countries(continent = "north america")
plot(a)
# Load coastline polygon and unite
World <- ne_countries(continent = "north america"), returnclass = "sf") %>%
st_union() %>% #just to combine all polygons into a large one
st_sf()
# Load coastline polygon and unite
World <- ne_countries(continent = "north america"), returnclass = "sf") %>%
st_union() %>% #just to combine all polygons into a large one
st_sf()
World <- ne_countries(continent = "north america"), returnclass = "sf")
# Load coastline polygon and unite
World <- ne_countries(continent = "north america", returnclass = "sf") %>%
st_union() %>% #just to combine all polygons into a large one
st_sf()
# Make the map
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_viridis_c(name = "Bathymetry (m)") +
labs(x = "Longitude", y = "Latitude")
# Load coastline polygon and unite
World <- ne_countries(continent = "north america", returnclass = "sf")
# Make the map
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_viridis_c(name = "Bathymetry (m)") +
labs(x = "Longitude", y = "Latitude")
# Load coastline polygon and unite
World <- ne_countries(continent = "north america", returnclass = "sf", scale = "medium")
# Make the map
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_viridis_c(name = "Bathymetry (m)") +
labs(x = "Longitude", y = "Latitude")
# Get bathymetry to use as basemap
basemap <- get.bathy(lon = lon, lat = lat, visualize = F, res = 5)
# Transform raster into a tidy data.frame
basemap_df <- data.frame(coordinates(basemap)) %>%
mutate(bathy = -values(basemap))
# Make the map
ggplot() +
geom_raster(data = basemap_df, mapping = aes(x = x, y = y, fill = bathy)) +
geom_sf(data = World) +
scale_x_continuous(limits = lon, expand = c(0, 0)) +
scale_y_continuous(limits = lat, expand = c(0, 0)) +
scale_fill_viridis_c(name = "Bathymetry (m)") +
labs(x = "Longitude", y = "Latitude")
logistic_model <- function(r = 1.0834, K = 100, N0 = 10, nsteps = 50, c = 0.7, p = 17.5, n = 5, m = 0.1){
# define a vector of time and N THIS IS ODD
time <- c(0:nsteps)
N <- matrix(0, ncol = 100, nrow = length(time))
C <- N
#Assign initial population size
N[1,] <- N0
#create pointers
left_pointer <- c(100, 1:99)
right_pointer <- c(1:99, 100)
c_mpa <- rep(c, 100)
c_mpa [1 : n] <- 0
#start for loop
for (t in 1:nsteps) {
N_in <- m * (N[t, left_pointer] + N[t, right_pointer])/2
N_out <- m * N[t,]
C[t, ] <- c_mpa * N[t, ]
N[t + 1,] <- N[t,] + (r * N[t,] * (1 - (N[t,] / K))) - C[t,] + N_in - N_out
}
# end for loop
#create catch data frame
C[t+1,] <- c_mpa * N[t+1,]
catch_df <- data.frame(time, C) %>%
magrittr::set_colnames(value = c("time", 1:100)) %>%
gather(parcel, C, -time)
#create data frame with sim results
simul <- data.frame(time, N) %>%
magrittr::set_colnames(value = c("time", 1:100)) %>%
gather(parcel, N, -time) %>%
left_join(catch_df, by = c("time", "parcel")) %>%
mutate(R = p*C,
zone = ifelse(C == 0, "reserve", "fishing"),
parcel = as.numeric(parcel))
return(simul)
}
results <- matrix(0, ncol = 4, nrow = 900) %>%
magrittr:: set_colnames(value = c( "n", "c", "N", "R")) %>%
as.data.frame()
i = 1
for(n in c(1 : 100)) {
for(c in seq(0.1, 0.9, by = 0.1)) {
results_i <- logistic_model(n = n, c = c, N0 = 90) %>%
filter(time == 50) %>%
group_by(time) %>%
summarise(N = sum(N), R = sum(R))
results$n[i] <- n
results$c[i] <- c
results$N[i] <- results_i$N
results$R[i] <- results_i$R
i = i + 1
}
library(tidyverse)
results <- matrix(0, ncol = 4, nrow = 900) %>%
magrittr:: set_colnames(value = c( "n", "c", "N", "R")) %>%
as.data.frame()
i = 1
for(n in c(1 : 100)) {
for(c in seq(0.1, 0.9, by = 0.1)) {
results_i <- logistic_model(n = n, c = c, N0 = 90) %>%
filter(time == 50) %>%
group_by(time) %>%
summarise(N = sum(N), R = sum(R))
results$n[i] <- n
results$c[i] <- c
results$N[i] <- results_i$N
results$R[i] <- results_i$R
i = i + 1
}
ls()
ggplot(results, aes(x = c, y = n, fill = R)) + geom)raster()
ggplot(results, aes(x = c, y = n, fill = R)) + geom_raster()
ggplot(results, aes(x = c, y = n, fill = R)) + geom_raster(interpolate = T) + scale_fill_viridis_c()
logistic_model <- function(r = 1.0834, K = 1000, N0 = 10, nsteps = 50, c = 0.7, p = 17.5, n = 5, m = 0.1){
# define a vector of time and N THIS IS ODD
time <- c(0:nsteps)
N <- matrix(0, ncol = 100, nrow = length(time))
C <- N
#Assign initial population size
N[1,] <- N0
#create pointers
left_pointer <- c(100, 1:99)
right_pointer <- c(1:99, 100)
c_mpa <- rep(c, 100)
c_mpa [1 : n] <- 0
#start for loop
for (t in 1:nsteps) {
N_in <- m * (N[t, left_pointer] + N[t, right_pointer])/2
N_out <- m * N[t,]
C[t, ] <- c_mpa * N[t, ]
N[t + 1,] <- N[t,] + (r * N[t,] * (1 - (N[t,] / K))) - C[t,] + N_in - N_out
}
# end for loop
#create catch data frame
C[t+1,] <- c_mpa * N[t+1,]
catch_df <- data.frame(time, C) %>%
magrittr::set_colnames(value = c("time", 1:100)) %>%
gather(parcel, C, -time)
#create data frame with sim results
simul <- data.frame(time, N) %>%
magrittr::set_colnames(value = c("time", 1:100)) %>%
gather(parcel, N, -time) %>%
left_join(catch_df, by = c("time", "parcel")) %>%
mutate(R = p*C,
zone = ifelse(C == 0, "reserve", "fishing"),
parcel = as.numeric(parcel))
return(simul)
}
results <- matrix(0, ncol = 4, nrow = 900) %>%
magrittr:: set_colnames(value = c( "n", "c", "N", "R")) %>%
as.data.frame()
i = 1
for(n in c(1 : 100)) {
for(c in seq(0.1, 0.9, by = 0.1)) {
results_i <- logistic_model(n = n, c = c, N0 = 900) %>%
filter(time == 50) %>%
group_by(time) %>%
summarise(N = sum(N), R = sum(R))
results$n[i] <- n
results$c[i] <- c
results$N[i] <- results_i$N
results$R[i] <- results_i$R
i = i + 1
}
ggplot(results, aes(x = c, y = n, fill = R)) + geom_raster(interpolate = T) + scale_fill_viridis_c()
ggplot(results, aes(x = c, y = n, fill = R)) + geom_raster(interpolate = T) + scale_fill_viridis_c() + geom_contour()
ggplot(results, aes(x = c, y = n, fill = R, contour = R)) + geom_raster(interpolate = T) + scale_fill_viridis_c() + geom_contour()
ggplot(results, aes(x = c, y = n, fill = R, fill = R)) + geom_raster(interpolate = T) + scale_fill_viridis_c() + geom_contour()
ggplot(results, aes(x = c, y = n, fill = R, z = R)) + geom_raster(interpolate = T) + scale_fill_viridis_c() + geom_contour()
ggplot(results, aes(x = c, y = n, fill = R, z = R)) + geom_raster(interpolate = T) + scale_fill_viridis_c() + geom_contour(color = "black")
shiny::runGitHub("turfeffect/MAREA")
git add -A
git commit -m "Updated all"
blogdown:::serve_site()
run servr::daemon_stop("1794078858648")
servr::daemon_stop("1794078858648")
blogdown:::serve_site()
servr::daemon_stop("1794078858648")
blogdown::serve_site()
parallel::detectCores()
a <- "á"
a
